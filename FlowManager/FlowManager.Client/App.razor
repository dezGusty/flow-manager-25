@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)">
            <Authorizing>
                <div class="spinner-overlay">
                    <div class="spinner"></div>
                </div>
            </Authorizing>
            <NotAuthorized>
                @RedirectToRootOnce()
            </NotAuthorized>
        </AuthorizeRouteView>
        <FocusOnNavigate RouteData="routeData" Selector="h1" />
    </Found>
    <NotFound>
        @RedirectToRootOnce()
    </NotFound>
</Router>

@code {
    private bool _hasRedirected;

    private RenderFragment RedirectToRootOnce() => builder =>
    {
        if (!_hasRedirected)
        {
            _hasRedirected = true;
            // Redirectul se face în contextul Blazor, după randare
            _ = InvokeAsync(() => Navigation.NavigateTo("/", true));
        }
    };
}
