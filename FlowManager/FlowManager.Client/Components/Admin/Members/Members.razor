@using System.Net.Http.Json
@using FlowManager.Shared.DTOs.Requests
@using FlowManager.Shared.DTOs.Responses
@using FlowManager.Shared.DTOs.Responses.User
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using FlowManager.Client.ViewModels
@using FlowManager.Client.Services
@using FlowManager.Client.DTOs

@attribute [Authorize(Roles = "Admin")]

<PageTitle>Members</PageTitle>

<div class="adminButtons">
    <button @onclick="() => _showAddForm = true" class="adminViewUsersButton">+ Add User</button>
</div>

@if (_users.Any())
{
    <!-- Users table -->
    <div class="table-container">
        <table>
            <thead>
                <tr>
                    <th class="table-header-item">User</th>
                    <th class="table-header-item">Email</th>
                    <th class="table-header-item">Roles</th>
                    <th class="table-header-item">Team</th>
                    <th class="table-header-item">Status</th>
                    <th class="table-header-item">Actions</th>
                </tr>
            </thead>

            <tbody>
                @foreach (UserVM user in _users)
                {
                    <tr>
                        <td class="table-data-item">
                            <div class="user-info">
                                <div class="user-avatar">
                                    @user.Name!.Substring(0, Math.Min(2, user.Name.Length)).ToUpper()
                                </div>
                                <div class="user-details">
                                    <div class="user-name">@user.Name</div>
                                </div>
                            </div>
                        </td>
                        <td class="table-data-item">
                            <div class="text-sm">@user.Email</div>
                        </td>
                        <td class="table-data-item">
                            <div class="text-sm">@string.Join(", ", user.Roles!.Select(r => r.RoleName))</div>
                        </td>
                        <td class="table-data-item">
                            <div class="text-sm">Team 1</div>
                        </td>
                        <td class="table-data-item">
                        <span class="status-badge @((bool)user.IsActive! ? "status-active" : "status-inactive")">
                                @((bool)user.IsActive ? "Active" : "Inactive")
                            </span>
                        </td>
                        <td class="table-data-item">
                            @if ((bool)user.IsActive)
                            {
                                <div class="actions-container">
                                    <button class="action-button edit-button"
                                            @onclick="() => EditUser(user)">
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                             viewBox="0 0 24 24"
                                             fill="currentColor"
                                             class="icon-small">
                                            <path d="M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-12.15 12.15a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32L19.513 8.2z" />
                                        </svg>
                                    </button>
                                    <button class="action-button delete-button"
                                            @onclick="() => DeleteUser(user)">
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                             viewBox="0 0 24 24"
                                             fill="currentColor"
                                             class="icon-small">
                                            <path fill-rule="evenodd"
                                                  d="M16.5 4.478v.227a48.816 48.816 0 013.878.512.75.75 0 11-.256 1.478l-.209-.035-1.005 13.07a3 3 0 01-2.991 2.77H8.084a3 3 0 01-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 01-.256-1.478A48.567 48.567 0 017.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 013.369 0c1.603.051 2.815 1.387 2.815 2.951zm-6.136-1.452a51.196 51.196 0 013.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 00-6 0v-.113c0-.794.609-1.428 1.364-1.452zm-.355 5.945a.75.75 0 10-1.5.058l.347 9a.75.75 0 101.499-.058l-.346-9zm5.48.058a.75.75 0 10-1.498-.058l-.347 9a.75.75 0 001.5.058l.345-9z"
                                                  clip-rule="evenodd" />
                                        </svg>
                                    </button>
                                </div>
                            }
                            @if (!(bool)user.IsActive)
                            {
                                <div class="actions-container">
                                    <button class="action-button restore-button"
                                            @onclick="() => RestoreUser(user)">
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                             viewBox="0 0 24 24"
                                             fill="currentColor"
                                             class="icon-medium">
                                            <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM17.3 13.4c-.3.3-.8.3-1.1 0L13 10.2V16c0 .6-.4 1-1 1s-1-.4-1-1v-5.8L7.8 13.4c-.3.3-.8.3-1.1 0-.3-.3-.3-.8 0-1.1l4.6-4.6c.3-.3.8-.3 1.1 0l4.6 4.6c.3.3.3.8.1 1.1z" />
                                            <path d="M19.07 4.93C17.45 3.31 15.32 2.36 13 2.05V4.1c1.71.25 3.31.92 4.65 1.93L19.07 4.93z" />
                                            <path d="M13 19.9v2.05c2.32-.31 4.45-1.26 6.07-2.88L17.65 17.65C16.31 18.66 14.71 19.33 13 19.9z" />
                                            <path d="M4.93 19.07C6.55 20.69 8.68 21.64 11 21.95V19.9c-1.71-.25-3.31-.92-4.65-1.93L4.93 19.07z" />
                                            <path d="M11 4.1V2.05C8.68 2.36 6.55 3.31 4.93 4.93L6.35 6.35C7.69 5.34 9.29 4.67 11 4.1z" />
                                        </svg>
                                    </button>
                                </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p class="text-white">No users found.</p>
}

<FlowManager.Client.Components.Admin.Members.MembersModals.MembersAddUserModal 
    @bind-ShowAddForm="@_showAddForm"
    OnUserAdded="@LoadUsers"/>

<FlowManager.Client.Components.Admin.Members.MembersModals.MembersEditUserModal
    @bind-ShowEditForm="@_showEditForm"
    UserToEdit="@_selectedUserToEdit"
    OnUserEdit="@LoadUsers"/>
