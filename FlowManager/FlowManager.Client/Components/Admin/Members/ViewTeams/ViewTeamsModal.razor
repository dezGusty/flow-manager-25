@using FlowManager.Client.ViewModels.Team;
@using FlowManager.Client.ViewModels;
@using FlowManager.Client.Components.Admin.Members.ViewTeams;

<div class="view-teams-container">
    <div class="search-container">
        <input class="search-teams-input"
               type="text"
               placeholder="Search by teams or employees name..."
               @bind="_searchTerm" />

        <button class="search-teams-button" @onclick="LoadTeams">
            Search
        </button>

        <button class="add-team-button" @onclick="() => OpenAddTeamModal()">
            + Add Team 
        </button>
    </div>
    
    <div class="teams-container">
        @for (int i = 0; i < _teams.Count(); i++)
        {
            int index = i;

            <!-- Team details -->
            <div class="team-details">
                <!-- Dropdown team members button -->
                @if (_teams[i].Users != null && _teams[i].Users?.Count() > 0)
                {
                    <button class="dropdown-team-members-button" @onclick="() => ChangeVisibilityTeamMembersDropdown(index)">
                        ˅
                    </button>
                }
                <label class="team-name">@_teams[i].Name</label>
                <span class="team-users-count">@(_teams[i].Users?.Count ?? 0) users</span>
                @if (_dropdownTeamMembersState[i] && _teams[i].Users != null && _teams[i].Users?.Count() > 0)
                {
                    <!-- Team members container-->
                    <div class="team-members-container">
                        @for (int j = 0; j < _teams[i].Users!.Count; j++)
                        {
                            <!-- Team members details -->
                            <div class="team-members-details">
                                <span class="team-member-name">@_teams[i].Users![j].Name</span>
                                <span class="team-member-email">(@_teams[i].Users![j].Email)</span>
                            </div>
                        }
                    </div>
                }

                <button class="edit-team-btn" @onclick="() => OpenEditTeamModal(_teams[index])">
                    🖊️ Edit
                </button>
            </div>
        }
    </div>
    

    @if(_teams == null || _teams.Count == 0)
    {
        <p>No teams found.</p>
    }
</div>

@if(_showAddTeamModal)
{
    <FlowManager.Client.Components.Admin.Members.ViewTeams.AddEditTeamsModals.AddTeamModal
        @bind-ShowAddTeamModal="@_showAddTeamModal"/>
}

@if(_showEditTeamModal)
{
    <FlowManager.Client.Components.Admin.Members.ViewTeams.AddEditTeamsModals.EditTeamModal
        @bind-ShowEditTeamModal="@_showEditTeamModal"
        TeamToEdit="@_teamToEdit"
        TeamWasEdited="() => LoadTeams()"/>
}