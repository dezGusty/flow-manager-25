@using FlowManager.Client.ViewModels.Team;
@using FlowManager.Client.ViewModels;
@using FlowManager.Client.Components.Admin.Members.ViewTeams;

<div class="view-teams-container">
    <div class="search-container">
        <input class="search-teams-input"
               type="text"
               placeholder="Search by teams or employees name..."
               @bind="_searchTerm" />

        <button class="search-teams-button" @onclick="LoadTeamsAsync">
            Search
        </button>

        <button class="add-team-button" @onclick="() => OpenAddTeamModal()">
            + Add Team 
        </button>
    </div>
    
    <div class="teams-container">
        @for (int i = 0; i < _teams.Count(); i++)
        {
            int index = i;

            <!-- Team details -->
            <div class="team-details">
                <!-- Dropdown team members button -->
                @if (_teams[i].Users != null && _teams[i].Users?.Count() > 0)
                {
                    <button class="dropdown-team-members-button" @onclick="() => ChangeVisibilityTeamMembersDropdown(index)">
                        ˅
                    </button>
                }
                <label class="team-name">@_teams[i].Name</label>
                <span class="team-users-count">@(_teams[i].Users?.Count ?? 0) users</span>
                @if (_dropdownTeamMembersState[i] && _teams[i].Users != null && _teams[i].Users?.Count() > 0)
                {
                    <!-- Team members container-->
                    <div class="team-members-container">
                        @for (int j = 0; j < _teams[i].Users!.Count; j++)
                        {
                            <!-- Team members details -->
                            <div class="team-members-details">
                                <span class="team-member-name">@_teams[i].Users![j].Name</span>
                                <span class="team-member-email">(@_teams[i].Users![j].Email)</span>
                            </div>
                        }
                    </div>
                }

                @if ((bool)_teams[index].IsActive!)
                {
                    <div class="actions-container">
                        <button class="action-button edit-button"
                                @onclick="() => OpenEditTeamModal(_teams[index])">
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 viewBox="0 0 24 24"
                                 fill="currentColor"
                                 class="icon-small">
                                <path d="M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-12.15 12.15a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32L19.513 8.2z" />
                            </svg>
                        </button>
                        <button class="action-button delete-button"
                                @onclick="() => DeleteTeam(_teams[index].Id)">
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 viewBox="0 0 24 24"
                                 fill="currentColor"
                                 class="icon-small">
                                <path fill-rule="evenodd"
                                      d="M16.5 4.478v.227a48.816 48.816 0 013.878.512.75.75 0 11-.256 1.478l-.209-.035-1.005 13.07a3 3 0 01-2.991 2.77H8.084a3 3 0 01-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 01-.256-1.478A48.567 48.567 0 017.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 013.369 0c1.603.051 2.815 1.387 2.815 2.951zm-6.136-1.452a51.196 51.196 0 013.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 00-6 0v-.113c0-.794.609-1.428 1.364-1.452zm-.355 5.945a.75.75 0 10-1.5.058l.347 9a.75.75 0 101.499-.058l-.346-9zm5.48.058a.75.75 0 10-1.498-.058l-.347 9a.75.75 0 001.5.058l.345-9z"
                                      clip-rule="evenodd" />
                            </svg>
                        </button>
                    </div>
                }
                else
                {
                    <div class="actions-container">
                        <button class="action-button restore-button"
                                @onclick="() => RestoreTeam(_teams[index].Id)">
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 viewBox="0 0 24 24"
                                 fill="currentColor"
                                 class="icon-medium">
                                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM17.3 13.4c-.3.3-.8.3-1.1 0L13 10.2V16c0 .6-.4 1-1 1s-1-.4-1-1v-5.8L7.8 13.4c-.3.3-.8.3-1.1 0-.3-.3-.3-.8 0-1.1l4.6-4.6c.3-.3.8-.3 1.1 0l4.6 4.6c.3.3.3.8.1 1.1z" />
                                <path d="M19.07 4.93C17.45 3.31 15.32 2.36 13 2.05V4.1c1.71.25 3.31.92 4.65 1.93L19.07 4.93z" />
                                <path d="M13 19.9v2.05c2.32-.31 4.45-1.26 6.07-2.88L17.65 17.65C16.31 18.66 14.71 19.33 13 19.9z" />
                                <path d="M4.93 19.07C6.55 20.69 8.68 21.64 11 21.95V19.9c-1.71-.25-3.31-.92-4.65-1.93L4.93 19.07z" />
                                <path d="M11 4.1V2.05C8.68 2.36 6.55 3.31 4.93 4.93L6.35 6.35C7.69 5.34 9.29 4.67 11 4.1z" />
                            </svg>
                        </button>
                    </div>
                }
            </div>
        }

        @if (_teams.Count > 0 && _totalPages > 1)
        {
            <div class="pagination-container">
                <nav>
                    <!-- First page btn-->
                    <button @onclick="GoToFirstPage"
                            disabled="@(_currentPage == 1)"
                            class="pagination-btn pagination-btn-first pagination-btn-nav">
                        <svg class="pagination-icon"
                             xmlns="http://www.w3.org/2000/svg"
                             viewBox="0 0 20 20"
                             fill="currentColor">
                            <path fill-rule="evenodd"
                                  d="M15.707 15.707a1 1 0 01-1.414 0L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 010 1.414z"
                                  clip-rule="evenodd" />
                        </svg>
                    </button>
                    <!-- Previous page btn -->
                    <button @onclick="GoToPreviousPage"
                            disabled="@(_currentPage == 1)"
                            class="pagination-btn pagination-btn-nav">
                        <svg class="pagination-icon"
                             xmlns="http://www.w3.org/2000/svg"
                             viewBox="0 0 20 20"
                             fill="currentColor">
                            <path fill-rule="evenodd"
                                  d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                                  clip-rule="evenodd" />
                        </svg>
                    </button>
                    <!-- Paged Numbers - go to page x -->
                    @foreach (int pageNumber in GetPageNumbers())
                    {
                        <button @onclick="() => GoToPage(pageNumber)"
                                class="pagination-btn pagination-btn-page @(pageNumber == _currentPage ? "pagination-btn-active" : "")">
                            @pageNumber
                        </button>
                    }
                    <!-- Ellipsis if are more pages available -->
                    @if (_totalPages > _maxVisiblePages && _currentPage < _totalPages - 2)
                    {
                        <span class="pagination-ellipsis">
                            ...
                        </span>
                    }
                    <!-- Next page button -->
                    <button @onclick="GoToNextPage"
                            disabled="@(_currentPage == _totalPages)"
                            class="pagination-btn pagination-btn-nav">
                        <svg class="pagination-icon"
                             xmlns="http://www.w3.org/2000/svg"
                             viewBox="0 0 20 20"
                             fill="currentColor">
                            <path fill-rule="evenodd"
                                  d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                                  clip-rule="evenodd" />
                        </svg>
                    </button>
                    <!-- Last page button -->
                    <button @onclick="GoToLastPage"
                            disabled="@(_currentPage == _totalPages)"
                            class="pagination-btn pagination-btn-last pagination-btn-nav">
                        <svg class="pagination-icon"
                             xmlns="http://www.w3.org/2000/svg"
                             viewBox="0 0 20 20"
                             fill="currentColor">
                            <path fill-rule="evenodd"
                                  d="M10.293 15.707a1 1 0 010-1.414L13.586 11H3a1 1 0 110-2h10.586l-3.293-3.293a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z"
                                  clip-rule="evenodd" />
                        </svg>
                    </button>
                </nav>

                <!-- Pagination info -->
                <div class="pagination-info">
                    <span class="pagination-info-text">
                        Showing @((_currentPage - 1) * _pageSize + 1) - @((_currentPage - 1) * _pageSize + _teams.Count) of @(_totalCount) users
                    </span>
                </div>
            </div>
        }
    </div>
    

    @if(_teams == null || _teams.Count == 0)
    {
        <p>No teams found.</p>
    }
</div>

@if(_showAddTeamModal)
{
    <FlowManager.Client.Components.Admin.Members.ViewTeams.AddEditTeamsModals.AddTeamModal
        @bind-ShowAddTeamModal="@_showAddTeamModal"
        TeamWasAdded="() => LoadTeamsAsync()"/>
}

@if(_showEditTeamModal)
{
    <FlowManager.Client.Components.Admin.Members.ViewTeams.AddEditTeamsModals.EditTeamModal
        @bind-ShowEditTeamModal="@_showEditTeamModal"
        TeamToEdit="@_teamToEdit"
                                                                                            TeamWasEdited="() => LoadTeamsAsync()"
        TeamStep="@_teamToEdit.Users![0].Step"/>
}