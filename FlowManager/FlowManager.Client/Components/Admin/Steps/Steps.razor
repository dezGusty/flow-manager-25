@using Microsoft.AspNetCore.Authorization
@using FlowManager.Client.ViewModels
@using FlowManager.Shared.DTOs.Responses.User
@using FlowManager.Shared.DTOs.Responses.Team
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Departments</PageTitle>

<h2 class="page-title">Departments</h2>

<div class="actions-bar">
    <div class="search-bar">
        <input type="text"
               placeholder="🔍 Search departments..."
               value="@searchTerm"
               @oninput="OnSearchChanged" />
               </div>

    <button class="go-to-history-btn" @onclick="GoToHistory">View History</button>

    <button class="action-btn create-btn" @onclick="OpenCreateModal">+ Create Department</button>
</div>


<div class="departments-grid">
    @if (departmentsInUI == null || !departmentsInUI.Any())
    {
        <p>No departments available.</p>
    }
    else
    {
        @foreach (var department in departmentsInUI)
        {
            <div class="department-card" style="background:@GetDepartmentColor(department.StepId)" @onclick="() => OpenModal(department)">
                <span class="department-name">
                    @department.StepName
                    </span>
            </div>
        }
    }
</div>

@if (hasMoreDepartments)
{
    <button class="load-more-btn" @onclick="() => LoadDepartments(currentPage)">Load More</button>
}

@if (isModalOpen && selectedDepartment != null)
{
    <div class="modal-backdrop" @onclick="CloseModal">
        <div class="modal-content" @onclick:stopPropagation="true">
            <div class="modal-header">
                <h3>@selectedDepartment.StepName</h3>
                <button class="close-icon" @onclick="CloseModal">✕</button>
            </div>

            @if (selectedDepartment.Users != null && selectedDepartment.Users.Any())
            {
                <div class="modal-section">
                    <h4>Users</h4>
                    <ul>
                        @foreach (var user in selectedDepartment.Users)
                        {
                            <li>@user.Name (@user.Email)</li>
                        }
                    </ul>
                </div>
            }

            @if (selectedDepartment.Teams != null && selectedDepartment.Teams.Any())
            {
                <div class="modal-section">
                    <h4>Teams</h4>
                    <ul>
                        @foreach (var team in selectedDepartment.Teams)
                        {
                            <li>@team.Name</li>
                        }
                    </ul>
                </div>
            }

            <div class="modal-actions">
                <div class="edit-dropdown @(isEditDropdownOpen ? "active" : "")">
                    <button class="action-btn edit-btn" @onclick="ToggleEditDropdown">
                        ✎ Edit
                        <span class="icon">▾</span>
                    </button>

                    <ul class="edit-dropdown-menu">
                        <li @onclick="() => OpenChangeNameModal(selectedDepartment)">Change Name</li>
                        <li @onclick="() => OpenChangeUsersModal(selectedDepartment)">Change Users</li>
                    </ul>
                </div>
                <button class="action-btn delete-btn" @onclick="async () => await OpenSelectDepartmentModal(selectedDepartment.StepId)">🗑 Delete</button>
            </div>
        </div>
    </div>
}

@if (isCreateModalOpen)
{
    <div class="create-dep-modal-overlay" @onclick="CloseCreateModal">
        <div class="create-dep-modal" @onclick:stopPropagation="true">
            <h2>Create Department</h2>

            <input type="text" placeholder="Department name" @bind="newDepName" />

            @if (!string.IsNullOrEmpty(error))
            {
                <p class="error-text">@error</p>
            }

            <div class="modal-actions">
                <button class="btn save-btn" @onclick="SaveDepartment">💾 Save</button>
                <button class="btn cancel-btn" @onclick="CloseCreateModal">✕ Cancel</button>
            </div>
        </div>
    </div>
}

@if (isEditModalOpen && currentEditType == EditType.ChangeName && selectedDepartment != null)
{
    <div class="edit-dep-modal-overlay" @onclick="CloseEditModal">
        <div class="edit-dep-modal" @onclick:stopPropagation="true">
            <div class="edit-dep-modal-header">
                <h3>Change Department Name</h3>
                <button class="close-btn" @onclick="CloseEditModal">✕</button>
            </div>

            <div class="edit-dep-name">
                <label for="depName">Department Name:</label>
                <input id="depName" type="text" @bind="editDepName" placeholder="Enter department name" />
                @if (!string.IsNullOrEmpty(error))
                {
                    <div class="error-text">@error</div>
                }
            </div>

            <div class="edit-dep-modal-actions">
                <button class="btn cancel-btn" @onclick="CloseEditModal">Cancel</button>
                <button class="btn save-btn" @onclick="SaveEditNameDepartment">Save Changes</button>
            </div>
        </div>
    </div>
}


@if (isDeleteModalOpen && departmentToDelete != null)
{
    <div class="delete-modal-backdrop" @onclick="() => isDeleteModalOpen = false">
        <div class="delete-modal-content" @onclick:stopPropagation="true">
            <div class="delete-modal-header">
                <h3>Reassign employees from: @departmentToDelete.StepName</h3>
                <button class="close-icon" @onclick="() => isDeleteModalOpen = false">✕</button>
            </div>

            <p>Select the department where you want to move the employees:</p>

            <select @bind="selectedReassignDepartmentId">
                <option value="">-- Select department --</option>
                @foreach (var dep in departments.Where(d => d.StepId != departmentToDelete.StepId))
                {
                    <option value="@dep.StepId">@dep.StepName</option>
                }
            </select>

            <div class="delete-modal-actions">
                <button class="btn cancel-btn" @onclick="CloseSelectDepartmentModal">✕ Cancel</button>
                <button class="btn save-btn" @onclick="OpenMoveUsersModal">➡ Next</button>
            </div>
        </div>
    </div>
}

@if (isMoveUsersModalOpen && departmentToDelete != null && selectedDepartment != null)
{
    <div class="select-modal-backdrop" @onclick="() => isMoveUsersModalOpen = false">
        <div class="select-modal-content wide" @onclick:stopPropagation="true">
            <div class="select-modal-header">
                <h3>Move Users & Teams</h3>
            </div>

            <div class="select-move-users-container">
                <div class="users-column">
                    <h4>@departmentToDelete.StepName - Individual Users</h4>
                    <ul>
                        @{
                            var individualUsersToDelete = GetIndividualUsers(departmentToDelete);
                        }
                        @if (individualUsersToDelete.Any())
                        {
                            @foreach (var user in individualUsersToDelete)
                            {
                                <li class="user-item">
                                    <span>@user.Name (@user.Email)</span>
                                    <button class="move-btn" @onclick="() => MoveUserToTarget(user)">➡</button>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="empty-slot">No individual users to move</li>
                        }
                    </ul>
                </div>

                <div class="users-column">
                    <h4>@selectedDepartment.StepName - Individual Users</h4>
                    <ul>
                        @{
                            var individualUsersTarget = GetIndividualUsers(selectedDepartment);
                        }
                        @if (individualUsersTarget.Any())
                        {
                            @foreach (var user in individualUsersTarget)
                            {
                                <li class="user-item">
                                    <span>@user.Name (@user.Email)</span>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="empty-slot">No individual users yet</li>
                        }
                    </ul>
                </div>
            </div>

            <div class="select-move-teams-container">
                <div class="teams-column">
                    <h4>@departmentToDelete.StepName - Teams</h4>
                    <ul>
                        @if (departmentToDelete.Teams != null && departmentToDelete.Teams.Any())
                        {
                            @foreach (var team in departmentToDelete.Teams)
                            {
                                <li class="team-item">
                                    <span>@team.Name</span>
                                    <button class="move-btn" @onclick="() => MoveTeamToTarget(team)">➡</button>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="empty-slot">No teams to move</li>
                        }
                    </ul>
                </div>

                <div class="teams-column">
                    <h4>@selectedDepartment.StepName - Teams</h4>
                    <ul>
                        @if (selectedDepartment.Teams != null && selectedDepartment.Teams.Any())
                        {
                            @foreach (var team in selectedDepartment.Teams)
                            {
                                <li class="team-item">
                                    <span>@team.Name </span>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="empty-slot">No teams yet</li>
                        }
                    </ul>
                </div>
            </div>

            <div class="select-modal-actions">
                <button class="btn cancel-btn" @onclick="CloseMoveUsersModal">✕ Cancel</button>
                <button class="btn save-btn" @onclick="SaveUserMoves">💾 Save Changes</button>
            </div>
        </div>
    </div>
}

@if (isChangeUsersModalOpen && selectedDepartment != null)
{
    <div class="delete-modal-backdrop" @onclick="() => isChangeUsersModalOpen = false">
        <div class="delete-modal-content" @onclick:stopPropagation="true">
            <div class="delete-modal-header">
                <h3>Move users from @selectedDepartment.StepName</h3>
                <button class="close-icon" @onclick="() => isChangeUsersModalOpen = false">✕</button>
            </div>

            <p>Select the department where you want to move the employees:</p>

            <select @bind="selectedReassignDepartmentId">
                <option value="">-- Select department --</option>
                @foreach (var dep in departments.Where(d => d.StepId != selectedDepartment.StepId))
                {
                    <option value="@dep.StepId">@dep.StepName</option>
                }
            </select>

            <div class="delete-modal-actions">
                <button class="btn cancel-btn" @onclick="() => isChangeUsersModalOpen = false">✕ Cancel</button>
                <button class="btn save-btn" @onclick="OpenMoveModal">➡ Next</button>
            </div>
        </div>
    </div>
}

@if (isMoveModalOpen && selectedDepartment != null && departmentToMove != null)
{
    <div class="select-modal-backdrop" @onclick="() => isMoveModalOpen = false">
        <div class="select-modal-content wide" @onclick:stopPropagation="true">
            <div class="select-modal-header">
                <h3>Move Users from @selectedDepartment.StepName to @departmentToMove.StepName</h3>
                <button class="close-icon" @onclick="() => isMoveModalOpen = false">✕</button>
            </div>

            <div class="select-move-users-container">
                <div class="users-column">
                    <h4>@selectedDepartment.StepName - Individual Users</h4>
                    <ul>
                        @{
                            var individualUsersSource = GetIndividualUsers(selectedDepartment);
                        }

                        @if (individualUsersSource.Any())
                        {
                            @foreach (var user in individualUsersSource)
                            {
                                <li class="user-item">
                                    <span>@user.Name (@user.Email)</span>
                                    <button class="move-btn" @onclick="() => MoveEditUserToTarget(user)">➡</button>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="empty-slot">No individual users to move</li>
                        }
                    </ul>
                </div>

                <div class="users-column">
                    <h4>@departmentToMove.StepName - Individual Users</h4>
                    <ul>
                        @{
                            var individualUsersDestination = GetIndividualUsers(departmentToMove);
                        }
                        @if (individualUsersDestination.Any())
                        {
                            @foreach (var user in individualUsersDestination)
                            {
                                <li class="user-item">@user.Name (@user.Email)</li>
                            }
                        }
                        else
                        {
                            <li class="empty-slot">No individual users yet</li>
                        }
                    </ul>
                </div>
            </div>

            <div class="select-move-teams-container">
                <div class="teams-column">
                    <h4>@selectedDepartment.StepName - Teams</h4>
                    <ul>
                        @if (selectedDepartment.Teams != null && selectedDepartment.Teams.Any())
                        {
                            @foreach (var team in selectedDepartment.Teams)
                            {
                                <li class="team-item">
                                    <span>@team.Name </span>
                                    <button class="move-btn" @onclick="() => MoveEditTeamToTargetAsync(team)">➡</button>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="empty-slot">No teams to move</li>
                        }
                    </ul>
                </div>

                <div class="teams-column">
                    <h4>@departmentToMove.StepName - Teams</h4>
                    <ul>
                        @if (departmentToMove.Teams != null && departmentToMove.Teams.Any())
                        {
                            @foreach (var team in departmentToMove.Teams)
                            {
                                <li class="team-item">
                                    <span>@team.Name</span>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="empty-slot">No teams yet</li>
                        }
                    </ul>
                </div>
            </div>

            <div class="select-modal-actions">
                <button class="btn cancel-btn" @onclick="() => isMoveModalOpen = false">Cancel</button>
                <button class="btn save-btn" @onclick="SaveUserMovesWithoutDelete">Save Changes</button>
            </div>
        </div>
    </div>
}