@using Microsoft.AspNetCore.Authorization
@using FlowManager.Client.ViewModels
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Departments</PageTitle>

<h2 class="page-title">Departments</h2>

<div class="actions-bar">
    <button class="action-btn create-btn" @onclick="OpenCreateModal">+ Create Department</button>
</div>

<div class="departments-grid">
    @if (departments == null || !departments.Any())
    {
        <p>No departments available.</p>
    }
    else
    {
        @foreach (var department in departments)
        {
            <div class="department-card" style="background:@departmentColors[department.Id]" @onclick="() => OpenModal(department)">
                <span class="department-name">@department.Name</span>

            </div>
        }
    }
</div>

@if (isModalOpen && selectedDepartment != null)
{
    <div class="modal-backdrop" @onclick="CloseModal">
        <div class="modal-content" @onclick:stopPropagation="true">

            <div class="modal-header">
                <h3>@selectedDepartment.Name</h3>
                <button class="close-icon" @onclick="CloseModal">✕</button>
            </div>

            @if (selectedDepartment.Teams != null && selectedDepartment.Teams.Any())
            {
                <div class="modal-section">
                    <h4>Teams</h4>
                    <ul>
                        @foreach (var team in selectedDepartment.Teams)
                        {
                            <li>@team.Name</li>
                        }
                    </ul>
                </div>
            }

            @if (selectedDepartment.Users != null && selectedDepartment.Users.Any())
            {
                <div class="modal-section">
                    <h4>Users</h4>
                    <ul>
                        @foreach (var user in selectedDepartment.Users)
                        {
                            <li>@user.Name (@user.Email)</li>
                        }
                    </ul>
                </div>
            }

            <div class="modal-actions">
                <button class="action-btn edit-btn" @onclick="async () => await OpenEditModal(selectedDepartment)">✎ Edit</button>
                <button class="action-btn delete-btn" @onclick="async () => await OpenDeleteDepartmentModal(selectedDepartment.Id)">🗑 Delete</button>
            </div>
        </div>
    </div>
}

@if (isCreateModalOpen)
{
    <div class="create-dep-modal-overlay" @onclick="CloseCreateModal">
        <div class="create-dep-modal" @onclick:stopPropagation="true">

            <h2>Create Department</h2>

            <input type="text" placeholder="Department name" @bind="newDepName" />

            @if (!string.IsNullOrEmpty(error))
            {
                <p class="error-text">@error</p>
            }

            <div class="users-list">
                <h3>Select Users</h3>
                @if (unsignedUsers?.Any() == true)
                {
                    @foreach (var user in unsignedUsers)
                    {
                        <label class="user-checkbox">
                            <input type="checkbox"
                                   value="@user.Id"
                                   @onchange="e => ToggleUserSelection(user, (bool)e.Value )" />
                            <span>@user.Name (@user.Email)</span>
                        </label>
                    }
                }
                else
                {
                    <p class="no-users">No available users</p>
                }
            </div>

            <div class="modal-actions">
                <button class="btn save-btn" @onclick="SaveDepartment">💾 Save</button>
                <button class="btn cancel-btn" @onclick="CloseCreateModal">✕ Cancel</button>
            </div>
        </div>
    </div>
}

@if (isEditModalOpen && selectedDepartment != null)
{
    <div class="edit-dep-modal-overlay" @onclick="CloseEditModal">
        <div class="edit-dep-modal" @onclick:stopPropagation="true">

            <h2>Edit Department</h2>

            <div class="users-list">
                <h3>Assigned Users</h3>
                @if (allUsers?.Any() == true)
                {
                    @foreach (var user in allUsers)
                    {
                        <label class="user-checkbox">
                            <input type="checkbox"
                                   value="@user.Id"
                                   checked="@selectedUsers.Any(u => u.Id == user.Id)"
                                   @onchange="e => ToggleUserSelection(user, (bool)e.Value)" />
                            <span>@user.Name (@user.Email)</span>
                        </label>
                    }
                }
                else
                {
                    <p class="no-users">No users found</p>
                }
            </div>

            <div class="modal-actions">
                <button class="btn save-btn" @onclick="SaveEditDepartment">💾 Save</button>
                <button class="btn cancel-btn" @onclick="CloseEditModal">✕ Cancel</button>
            </div>
        </div>
    </div>
}

@if (isDeleteModalOpen && departmentToDelete != null)
{
    <div class="delete-modal-backdrop" @onclick="() => isDeleteModalOpen = false">
        <div class="delete-modal-content" @onclick:stopPropagation="true">

            <div class="delete-modal-header">
                <h3>Reassign employees from: @departmentToDelete.Name</h3>
                <button class="close-icon" @onclick="() => isDeleteModalOpen = false">✕</button>
            </div>

            <p>Select the department where you want to move the employees:</p>

            <select @bind="selectedReassignDepartmentId">
                <option value="">-- Select department --</option>
                @foreach (var dep in departments.Where(d => d.Id != departmentToDelete.Id))
                {
                    <option value="@dep.Id">@dep.Name</option>
                }
            </select>

            <div class="delete-modal-actions">
                <button class="btn cancel-btn" @onclick="CloseDeleteDepartmentModal">✕ Cancel</button>
                <button class="btn save-btn" @onclick="OpenMoveUsersModal">➡ Next</button>
            </div>
        </div>
    </div>
}

@if (isMoveUsersModalOpen && departmentToDelete != null && selectedDepartment != null)
{
    <div class="select-modal-backdrop" @onclick="() => isMoveUsersModalOpen = false">
        <div class="select-modal-content wide" @onclick:stopPropagation="true">

            <div class="select-modal-header">
                <h3>Move Users</h3>
            </div>

            <div class="select-move-users-container">
                <div class="users-column">
                    <h4>@departmentToDelete.Name</h4>
                    <ul>
                        @if (departmentToDelete.Users != null && departmentToDelete.Users.Any())
                        {
                            @foreach (var user in departmentToDelete.Users)
                            {
                                <li class="user-item">
                                    <span>@user.Name (@user.Email)</span>
                                    <button class="move-btn" @onclick="() => MoveUserToTarget(user)">➡</button>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="empty-slot">No users to move</li>
                        }
                    </ul>
                </div>

                <div class="users-column">
                    <h4>@selectedDepartment.Name</h4>
                    <ul>
                        @if (selectedDepartment.Users != null && selectedDepartment.Users.Any())
                        {
                            @foreach (var user in selectedDepartment.Users)
                            {
                                <li class="user-item">
                                    <span>@user.Name (@user.Email)</span>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="empty-slot">No users yet</li>
                        }
                    </ul>
                </div>
            </div>

            <div class="select-modal-actions">
                <button class="btn cancel-btn" @onclick="CloseMoveUsersModal">✕ Cancel</button>
                <button class="btn save-btn" @onclick="SaveUserMoves">💾 Save Changes</button>
            </div>
        </div>
    </div>
}