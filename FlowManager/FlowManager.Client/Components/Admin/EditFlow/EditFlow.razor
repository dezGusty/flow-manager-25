@using FlowManager.Client.Components.Admin.Flows.AddFlow.FlowAddModal;
@using FlowManager.Client.ViewModels;
@using Microsoft.AspNetCore.Components.Web;

<div class="edit-flow-container">
    @if (_showAssignToStepModal)
    {
        <AssignToStepModal @bind-ShowAssignToStepModal="@_showAssignToStepModal"
                           @bind-FlowStepToAssign="@_flowStepToAssign"
                           OnStepAssigned="ConfigureStepsToFlow" />
    }

    <!-- Step configuration area -->
    <div class="step-configuration @(_isDragOver ? "drag-over" : "")"
         @ondrop="HandleDrop"
         @ondragover="HandleDragOver"
         @ondragover:preventDefault="true"
         @ondragenter="HandleDragEnter"
         @ondragleave="HandleDragLeave">

        <div class="step-configuration-header">
            <div class="flow-name-section">
                <label for="flowName" class="flow-name-label">*Flow Name (must be different from @_initialFlowName):</label>
                <input type="text"
                       id="flowName"
                       class="flow-name-input @GetFlowNameValidationClass()"
                       @bind="_flowName"
                       @bind:event="oninput"
                       maxlength="100" />
            </div>
        </div>

        <div class="dropped-steps">
            @if (!_configuredSteps.Any())
            {
                <div class="empty-state">
                    Drag steps here to edit your workflow
                </div>
            }
            else
            {
                @for (int i = 0; i < _configuredSteps.Count; i++)
                {
                    var flowStep = _configuredSteps[i];
                    var flowStepIndex = i;

                    <!-- FlowStep container -->
                    <div class="dropped-step" key="@flowStep.Id">

                        <!-- FlowStep header -->
                        <div class="flowstep-header">
                            <!-- FlowStep order indicator -->
                            <div class="step-order flowstep-order">@(flowStepIndex + 1)</div>

                            <!-- FlowStep title -->
                            <div class="flowstep-title">Flow Step @(flowStepIndex + 1)</div>

                            <!-- FlowStep controls -->
                            <div class="flowstep-controls">
                                <!-- FlowStep reorder buttons -->
                                <div class="reorder-buttons flowstep-reorder">
                                    @if (flowStepIndex > 0)
                                    {
                                        <button class="reorder-btn up" @onclick="() => MoveStepUp(flowStepIndex)" title="Move flow step up" @onclick:stopPropagation="true">↑</button>
                                    }
                                    @if (flowStepIndex < _configuredSteps.Count - 1)
                                    {
                                        <button class="reorder-btn down" @onclick="() => MoveStepDown(flowStepIndex)" title="Move flow step down" @onclick:stopPropagation="true">↓</button>
                                    }
                                </div>

                                <!-- Remove FlowStep button -->
                                <button class="remove-step flowstep-remove" @onclick="() => RemoveConfiguredStep(flowStepIndex)" @onclick:stopPropagation="true">×</button>
                            </div>
                        </div>

                        <!-- FlowStepItems container -->
                        <div class="flowstep-items-container">
                            @if (!flowStep.FlowStepItems.Any())
                            {
                                <div class="flowstep-items-empty">
                                    <span class="empty-text">No steps assigned yet</span>
                                    <button class="btn-add-step" @onclick="() => AddFlowStepItem(flowStepIndex)" @onclick:stopPropagation="true">
                                        + Add Step
                                    </button>
                                </div>
                            }
                            else
                            {
                                @for (int j = 0; j < flowStep.FlowStepItems.Count; j++)
                                {
                                    var flowStepItem = flowStep.FlowStepItems[j];
                                    var flowStepItemIndex = j;

                                    <!-- FlowStepItem -->
                                    <div class="flowstep-item" @onclick="() => ShowAssingToStepModal(flowStepItem, flowStepIndex, flowStepItemIndex)">
                                        <!-- FlowStepItem order -->
                                        <div class="flowstepitem-order">@(flowStepItemIndex + 1)</div>

                                        <!-- FlowStepItem content -->
                                        <div class="flowstepitem-info">
                                            <div class="step-avatar flowstepitem-avatar">
                                                @if (flowStepItem.Step?.Name != null)
                                                {
                                                    @flowStepItem.Step.Name.Substring(0, Math.Min(2, flowStepItem.Step.Name.Length)).ToUpper()
                                                }
                                                else
                                                {
                                                    <text>?</text>
                                                }
                                            </div>
                                            <div class="step-details flowstepitem-details">
                                                <div class="step-name">@(flowStepItem.Step?.Name ?? "Unassigned Step")</div>
                                                <div class="step-users-count">
                                                    @((flowStepItem.AssignedUsers?.Count ?? 0) + (flowStepItem.AssignedTeams?.Count ?? 0)) assignments
                                                </div>
                                            </div>
                                        </div>

                                        <!-- FlowStepItem controls -->
                                        <div class="flowstepitem-controls">
                                            <!-- FlowStepItem reorder buttons -->
                                            <div class="reorder-buttons flowstepitem-reorder">
                                                @if (flowStepItemIndex > 0)
                                                {
                                                    <button class="reorder-btn up small" @onclick="(e) => MoveFlowStepItemUp(flowStepIndex, flowStepItemIndex, e)" title="Move step up" @onclick:stopPropagation="true">↑</button>
                                                }
                                                @if (flowStepItemIndex < flowStep.FlowStepItems.Count - 1)
                                                {
                                                    <button class="reorder-btn down small" @onclick="(e) => MoveFlowStepItemDown(flowStepIndex, flowStepItemIndex, e)" title="Move step down" @onclick:stopPropagation="true">↓</button>
                                                }
                                            </div>

                                            <!-- Remove FlowStepItem button -->
                                            <button class="remove-step flowstepitem-remove" @onclick="(e) => RemoveFlowStepItem(flowStepIndex, flowStepItemIndex, e)" @onclick:stopPropagation="true">×</button>
                                        </div>
                                    </div>
                                }

                                <!-- Add FlowStepItem button -->
                                <div class="add-flowstepitem-container">
                                    <button class="btn-add-step" @onclick="() => AddFlowStepItem(flowStepIndex)" @onclick:stopPropagation="true">
                                        + Add Step to this Flow Step
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                }

                @if (!string.IsNullOrEmpty(_onSubmitMessage))
                {
                    <div class="onSubmitMessage">
                        <span class="onSubmit @(_onSubmitSuccess ? "success" : "fail")">@_onSubmitMessage</span>
                    </div>
                }
            }
        </div>
    </div>

    <!-- Sidebar container care include navbar și butoanele -->
    <div class="sidebar-container">
        <!-- Steps navbar -->
        <div class="steps-navbar">
            <div class="navbar-header">Available Steps</div>
            @foreach (StepVM step in _availableSteps)
            {
                <div class="step-info @(_draggedStep?.Id == step.Id ? "dragging" : "")"
                     draggable="true"
                     @ondragstart="(e) => HandleDragStart(e, step)"
                     @ondragend="HandleDragEnd">

                    <!-- Step description -->
                    <div class="step-avatar">
                        @step.Name!.Substring(0, Math.Min(2, step.Name!.Length)).ToUpper()
                    </div>
                    <div class="step-details">
                        <div class="step-name">@step.Name</div>
                        <div class="step-users-count">
                            @(step.Users?.Count() ?? 0) moderators
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Modal Footer - acum sub navbar -->
        <div class="modal-footer">
            <button class="btn-clear" @onclick="ClearConfiguration">Cancel</button>
            <button class="btn-primary" @onclick="SaveCurrentWorkflowAsync" disabled="@(!IsWorkflowValid())">
                Save Changes
            </button>
        </div>
    </div>
</div>