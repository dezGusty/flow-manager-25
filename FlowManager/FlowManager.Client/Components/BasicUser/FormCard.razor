@using FlowManager.Shared.DTOs.Responses.FormTemplate
@using FlowManager.Shared.DTOs.Requests.FormResponse
@using FlowManager.Shared.DTOs
@using FlowManager.Shared.DTOs.Responses.Component

<div class="form-card" @onclick="() => OnClick.InvokeAsync(FormResponse)">
    <div class="form-card-header">
        <div class="form-icon">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                <path fill-rule="evenodd"
                    d="M5.625 1.5c-1.036 0-1.875.84-1.875 1.875v17.25c0 1.035.84 1.875 1.875 1.875h12.75c1.035 0 1.875-.84 1.875-1.875V12.75A3.75 3.75 0 0016.5 9h-1.875a1.875 1.875 0 01-1.875-1.875V5.25A3.75 3.75 0 009 1.5H5.625zM7.5 15a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 017.5 15zm.75-4.5a.75.75 0 000 1.5H12a.75.75 0 000-1.5H8.25z"
                    clip-rule="evenodd" />
                <path
                    d="M12.971 1.816A5.23 5.23 0 0114.25 5.25v1.875c0 .207.168.375.375.375H16.5a5.23 5.23 0 013.434 1.279 9.768 9.768 0 00-6.963-6.963z" />
            </svg>
        </div>
        <div class="form-info">
            <h4>@FormResponse.FormTemplateName</h4>
            <p class="form-meta">
                Step: @string.Join(", ", FormResponse.FlowStep.FlowStepItems.Select(item => item.Step!.StepName))
            </p>
        </div>
    </div>

    <div class="form-card-body">
        <div class="form-details">
            <div class="detail-item">
                <span class="detail-label">Created</span>
                <span class="detail-value">@FormResponse.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
            </div>
            @if (FormResponse.UpdatedAt.HasValue)
            {
                <div class="detail-item">
                    <span class="detail-label">Updated</span>
                    <span class="detail-value">@FormResponse.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")</span>
                </div>
            }
            <div class="detail-item status-item">
                <span class="detail-label">Status</span>
                <span class="detail-value">
                    <span class="status-badge @(GetFormStatus().ToLower())">@GetFormStatus()</span>
                </span>
            </div>
            @if (!string.IsNullOrEmpty(FormResponse.RejectReason))
            {
                <div class="detail-item reject-reason">
                    <span class="detail-label">Reject Reason</span>
                    <span class="detail-value">@FormResponse.RejectReason</span>
                </div>
            }
            @if (FormResponse.CompletedByAdmin && !string.IsNullOrEmpty(FormResponse.CompletedByAdminName))
            {
                <div class="detail-item admin-completed">
                    <span class="detail-label">Completed by Admin </span>
                    <span class="detail-value admin-badge">@FormResponse.CompletedByAdminName</span>
                </div>
            }
            @if (FormResponse.CompletedByOtherUserId != null && (Guid)FormResponse.CompletedByOtherUserId != Guid.Empty)
            {
                <div class="detail-item">
                    <span class="detail-label">Completed on your behalf</span>
                    <span class="detail-value">@FormResponse.CompletedByOtherUser?.Name</span>
                </div>
            }
        </div>
    </div>

    <div class="form-card-footer">
        <div class="view-indicator">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 15a3 3 0 100-6 3 3 0 000 6z" />
                <path fill-rule="evenodd"
                    d="M1.323 11.447C2.811 6.976 7.028 3.75 12.001 3.75c4.97 0 9.185 3.223 10.675 7.69.12.362.12.752 0 1.113-1.487 4.471-5.705 7.697-10.677 7.697-4.97 0-9.186-3.223-10.675-7.69a1.762 1.762 0 010-1.113zM17.25 12a5.25 5.25 0 11-10.5 0 5.25 5.25 0 0110.5 0z"
                    clip-rule="evenodd" />
            </svg>
            <span>Click to view</span>
        </div>
    </div>
</div>
