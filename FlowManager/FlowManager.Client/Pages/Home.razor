@page "/home"
@layout MainLayout
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject NavigationManager Navigation

<FlowManager.Client.Components.NavBar.Navbar />

<!-- Page description -->
<div class="page-description">
    <h2>Welcome back!</h2>
    <p>Choose your workspace to get started</p>
</div>

<div class="home-container">
    <div class="roles-grid">
    @if (userRoles.Contains("Admin"))
    {
        <div class="role-card admin-card" @onclick="NavigateToAdmin">
            <div class="role-icon">⚙️</div>
            <h3 class="role-title">Admin Dashboard</h3>
            <p class="role-description">Manage users, flows, forms and system settings</p>
            <div class="role-badge admin-badge">Administrator</div>
        </div>
    }

    @if (userRoles.Contains("Manager"))
    {
        <div class="role-card manager-card" @onclick="NavigateToManager">
            <div class="role-icon">📊</div>
            <h3 class="role-title">Manager Dashboard</h3>
            <p class="role-description">Manage team flows and monitor progress</p>
            <div class="role-badge manager-badge">Manager</div>
        </div>
    }

    @if (userRoles.Contains("BasicUser") || userRoles.Contains("User"))
    {
        <div class="role-card user-card" @onclick="NavigateToUser">
            <div class="role-icon">👤</div>
            <h3 class="role-title">User Workspace</h3>
            <p class="role-description">Access your flows, forms and tasks</p>
            <div class="role-badge user-badge">User</div>
        </div>
    }
</div>

    @if (!userRoles.Any())
    {
        <div class="no-roles">
            <h3>No roles assigned</h3>
            <p>Please contact your administrator to assign roles to your account.</p>
        </div>
    }
</div>

@code {
    private List<string> userRoles = new();

    protected override async Task OnInitializedAsync()
    {
        // Aici ar trebui să obții rolurile utilizatorului din serviciul de autentificare
        // Pentru demo, simulez că utilizatorul are rolurile Admin și User
        userRoles = new List<string> { "Admin", "BasicUser", "Manager" };

        // Dacă utilizatorul are un singur rol, redirectează direct
        if (userRoles.Count == 1)
        {
            await NavigateToRole(userRoles.First());
        }
    }

    private void NavigateToAdmin()
    {
        Navigation.NavigateTo("/admin");
    }

    private void NavigateToUser()
    {
        Navigation.NavigateTo("/basic-user");
    }

    private void NavigateToManager()
    {
        Navigation.NavigateTo("/manager-dashboard");
    }

    private async Task NavigateToRole(string role)
    {
        await Task.Delay(100);

        switch (role)
        {
            case "Admin":
                NavigateToAdmin();
                break;
            case "BasicUser":
            case "User":
                NavigateToUser();
                break;
            case "Manager":
                NavigateToManager();
                break;
            default:
                Navigation.NavigateTo("/");
                break;
        }
    }
}