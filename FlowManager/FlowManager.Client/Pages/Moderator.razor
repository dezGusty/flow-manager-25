@page "/moderator"
@layout MainLayout
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Http
@using Microsoft.AspNetCore.Authorization
@using FlowManager.Shared.DTOs.Requests.FormResponse
@using FlowManager.Shared.DTOs.Responses.FormTemplate
@using FlowManager.Shared.DTOs.Responses.Component
@using FlowManager.Client.Services
@using static FlowManager.Client.Pages.FillForm
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthProvider
@inject CookieAuthStateProvider CookieAuthStateProvider
@inject HttpClient Http
@inject FormResponseService FormResponseService
@inject FormTemplateService FormTemplateService
@inject ComponentService ComponentService
@inject FlowService FlowService
@inject IJSRuntime JSRuntime
@attribute [Authorize(Roles = "Moderator")]

<FlowManager.Client.Components.NavBar.Navbar />

<!-- Page description -->
<div class="page-description">
    <h2>Moderator dashboard</h2>
    <p>Review and manage assigned form submissions</p>

    <div class="welcome-label">
        <label>Welcome, @(_currentUser != null ? _currentUser.Name : string.Empty)!</label>
    </div>
</div>

<div class="moderator-container">
    <!-- Left sidebar -->
    <nav class="sidebar">
        <!-- Navigation items -->
        <div class="nav-main">
            <!-- ASSIGNED FORMS -->
            <button class="nav-item @(_activeTab == "ASSIGNED" ? "active" : "")"
                    @onclick="@(() => SetActiveTab("ASSIGNED"))">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"
                     style="width: 16px; height: 16px; display: inline-block; margin-right: 8px;">
                    <path fill-rule="evenodd"
                          d="M7.502 6h7.128A3.375 3.375 0 0118 9.375v9.375a3 3 0 003-3V6.108c0-1.505-1.125-2.811-2.664-2.94a48.972 48.972 0 00-.673-.05A3 3 0 0015 1.5h-1.5a3 3 0 00-2.663 1.618c-.225.015-.45.032-.673.05C8.662 3.295 7.554 4.542 7.502 6zM13.5 3A1.5 1.5 0 0012 4.5h4.5A1.5 1.5 0 0015 3h-1.5z"
                          clip-rule="evenodd" />
                    <path fill-rule="evenodd"
                          d="M3 9.375C3 8.339 3.84 7.5 4.875 7.5h9.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-9.75A1.875 1.875 0 013 20.625V9.375zM6 12a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H6.75a.75.75 0 01-.75-.75V12zm2.25 0a.75.75 0 01.75-.75h3.75a.75.75 0 010 1.5H9a.75.75 0 01-.75-.75zm0 2.25a.75.75 0 01.75-.75h3.75a.75.75 0 010 1.5H9a.75.75 0 01-.75-.75z"
                          clip-rule="evenodd" />
                </svg>
                Assigned Forms
            </button>
            <button class="nav-item @(_activeTab == "HISTORY" ? "active" : "")"
                    @onclick="@(() => SetActiveTab("HISTORY"))">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"
                     style="width: 16px; height: 16px; display: inline-block; margin-right: 8px;">
                    <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zM12.75 6a.75.75 0 00-1.5 0v6c0 .414.336.75.75.75h4.5a.75.75 0 000-1.5h-3.75V6z" clip-rule="evenodd" />
                </svg>
                Review History
            </button>
        </div>

        <!-- Logout -->
        <div class="nav-bottom">
            <button class="nav-item logout-btn" @onclick="@(() => Logout())">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"
                     style="width: 16px; height: 16px; display: inline-block; margin-right: 8px;">
                    <path fill-rule="evenodd"
                          d="M7.5 3.75A1.5 1.5 0 006 5.25v13.5a1.5 1.5 0 001.5 1.5h6a1.5 1.5 0 001.5-1.5V15a.75.75 0 011.5 0v3.75a3 3 0 01-3 3h-6a3 3 0 01-3-3V5.25a3 3 0 013-3h6a3 3 0 013 3V9A.75.75 0 0115 9V5.25a1.5 1.5 0 00-1.5-1.5h-6z"
                          clip-rule="evenodd" />
                    <path fill-rule="evenodd"
                          d="M19.5 12a.75.75 0 000-1.5l-6-6a.75.75 0 00-1.06 1.06l4.72 4.72H9a.75.75 0 000 1.5h8.16l-4.72 4.72a.75.75 0 101.06 1.06l6-6z"
                          clip-rule="evenodd" />
                </svg>
                Logout
            </button>
        </div>
    </nav>

    <!-- Main content area -->
    <main class="main-content">
        @if (_activeTab == "ASSIGNED")
        {
            <div class="assigned-content">
                <!-- Header -->
                <div class="assigned-header">
                    <h3>Assigned Forms</h3>
                    <div class="header-actions">
                        <button class="action-btn refresh-btn" @onclick="RefreshAssignedForms">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                <path fill-rule="evenodd" d="M4.755 10.059a7.5 7.5 0 0112.548-3.364l1.903 1.903h-3.183a.75.75 0 000 1.5h4.992a.75.75 0 00.75-.75V4.356a.75.75 0 00-1.5 0v3.18l-1.9-1.9A9 9 0 003.306 9.67a.75.75 0 101.45.388zm15.408 3.352a.75.75 0 00-.919.53 7.5 7.5 0 01-12.548 3.364l-1.902-1.903h3.183a.75.75 0 000-1.5H2.984a.75.75 0 00-.75.75v4.992a.75.75 0 001.5 0v-3.18l1.9 1.9a9 9 0 0015.059-4.035.75.75 0 00-.53-.918z" clip-rule="evenodd" />
                            </svg>
                            Refresh
                        </button>
                    </div>
                </div>

                <!-- Search Bar -->
                <div class="search-container">
                    <div class="search-input-wrapper">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="search-icon">
                            <path fill-rule="evenodd" d="M10.5 3.75a6.75 6.75 0 100 13.5 6.75 6.75 0 000-13.5zM2.25 10.5a8.25 8.25 0 1114.59 5.28l4.69 4.69a.75.75 0 11-1.06 1.06l-4.69-4.69A8.25 8.25 0 012.25 10.5z" clip-rule="evenodd" />
                        </svg>
                        <input type="text"
                               placeholder="Search assigned forms by user, form name, or step..."
                               @bind="searchTerm"
                               @oninput="OnSearchInput"
                               class="search-input" />
                        @if (!string.IsNullOrEmpty(searchTerm))
                        {
                            <button class="clear-search-btn" @onclick="ClearSearch">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                    <path fill-rule="evenodd" d="M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z" clip-rule="evenodd" />
                                </svg>
                            </button>
                        }
                    </div>
                    @if (!string.IsNullOrEmpty(searchTerm))
                    {
                        <div class="search-results-info">
                            @if (assignedForms?.Any() == true)
                            {
                                <span>Found @assignedForms.Count form(s) matching "@searchTerm"</span>
                            }
                            else if (!isLoading)
                            {
                                <span>No forms found matching "@searchTerm"</span>
                            }
                        </div>
                    }
                </div>

                <!-- Content -->
                @if (isLoading && _currentPage == 1)
                {
                    <div class="loading-container">
                        <div class="spinner"></div>
                        <p>Loading assigned forms...</p>
                    </div>
                }
                else if (assignedForms?.Any() == true)
                {
                    <div class="forms-grid">
                        @foreach (var form in assignedForms.OrderByDescending(f => f.CreatedAt))
                        {
                            <div class="form-card @(CanReviewForm(form) ? "can-review" : "cannot-review") status-@GetFormStatus(form).ToLower()"
                                 @onclick="() => ViewFormResponse(form)">
                                <div class="form-card-header">
                                    <div class="form-icon">
                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                            <path fill-rule="evenodd"
                                                  d="M5.625 1.5c-1.036 0-1.875.84-1.875 1.875v17.25c0 1.035.84 1.875 1.875 1.875h12.75c1.035 0 1.875-.84 1.875-1.875V12.75A3.75 3.75 0 0016.5 9h-1.875a1.875 1.875 0 01-1.875-1.875V5.25A3.75 3.75 0 009 1.5H5.625zM7.5 15a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 017.5 15zm.75-4.5a.75.75 0 000 1.5H12a.75.75 0 000-1.5H8.25z"
                                                  clip-rule="evenodd" />
                                            <path d="M12.971 1.816A5.23 5.23 0 0114.25 5.25v1.875c0 .207.168.375.375.375H16.5a5.23 5.23 0 013.434 1.279 9.768 9.768 0 00-6.963-6.963z" />
                                        </svg>
                                    </div>
                                    <div class="form-info">
                                        <h4>@form.FormTemplateName</h4>
                                        <p class="form-meta">@form.StepName</p>
                                    </div>
                                </div>

                                <div class="form-card-body">
                                    <div class="form-details">
                                        <div class="detail-item">
                                            <span class="detail-label">Submitted by:</span>
                                            <span class="detail-value">@form.UserName</span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label">Email:</span>
                                            <span class="detail-value">@form.UserEmail</span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label">Status:</span>
                                            <span class="detail-value" style="color: @GetStatusColor(GetFormStatus(form)); font-weight: 600;">
                                                @GetFormStatus(form)
                                            </span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label">Created:</span>
                                            <span class="detail-value">@form.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                                        </div>
                                        @if (form.UpdatedAt.HasValue)
                                        {
                                            <div class="detail-item">
                                                <span class="detail-label">Updated:</span>
                                                <span class="detail-value">@form.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")</span>
                                            </div>
                                        }
                                        @if (!string.IsNullOrEmpty(form.RejectReason))
                                        {
                                            <div class="detail-item reject-reason">
                                                <span class="detail-label">Reject Reason:</span>
                                                <span class="detail-value">@form.RejectReason</span>
                                            </div>
                                        }
                                    </div>
                                </div>

                                <div class="form-card-footer">
                                    <div class="view-indicator">
                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                            <path d="M12 15a3 3 0 100-6 3 3 0 000 6z" />
                                            <path fill-rule="evenodd"
                                                  d="M1.323 11.447C2.811 6.976 7.028 3.75 12.001 3.75c4.97 0 9.185 3.223 10.675 7.69.12.362.12.752 0 1.113-1.487 4.471-5.705 7.697-10.677 7.697-4.97 0-9.186-3.223-10.675-7.69a1.762 1.762 0 010-1.113zM17.25 12a5.25 5.25 0 11-10.5 0 5.25 5.25 0 0110.5 0z"
                                                  clip-rule="evenodd" />
                                        </svg>
                                        <span>@(CanReviewForm(form) ? "Click to review" : "Click to view")</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- ADAUGĂ PAGINAREA AICI -->
                    @if (_totalPages > 1)
                    {
                        <div class="pagination-container">
                            <nav>
                                <!-- First page btn-->
                                <button @onclick="GoToFirstPage"
                                        disabled="@(_currentPage == 1)"
                                        class="pagination-btn pagination-btn-first pagination-btn-nav">
                                    <svg class="pagination-icon"
                                         xmlns="http://www.w3.org/2000/svg"
                                         viewBox="0 0 20 20"
                                         fill="currentColor">
                                        <path fill-rule="evenodd"
                                              d="M15.707 15.707a1 1 0 01-1.414 0L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 010 1.414z"
                                              clip-rule="evenodd" />
                                    </svg>
                                </button>
                                <!-- Previous page btn -->
                                <button @onclick="GoToPreviousPage"
                                        disabled="@(_currentPage == 1)"
                                        class="pagination-btn pagination-btn-nav">
                                    <svg class="pagination-icon"
                                         xmlns="http://www.w3.org/2000/svg"
                                         viewBox="0 0 20 20"
                                         fill="currentColor">
                                        <path fill-rule="evenodd"
                                              d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                                              clip-rule="evenodd" />
                                    </svg>
                                </button>
                                <!-- Paged Numbers - go to page x -->
                                @foreach (int pageNumber in GetPageNumbers())
                                {
                                    <button @onclick="() => GoToPage(pageNumber)"
                                            class="pagination-btn pagination-btn-page @(pageNumber == _currentPage ? "pagination-btn-active" : "")">
                                        @pageNumber
                                    </button>
                                }
                                <!-- Ellipsis if are more pages available -->
                                @if (_totalPages > _maxVisiblePages && _currentPage < _totalPages - 2)
                                {
                                    <span class="pagination-ellipsis">
                                        ...
                                    </span>
                                }
                                <!-- Next page button -->
                                <button @onclick="GoToNextPage"
                                        disabled="@(_currentPage == _totalPages)"
                                        class="pagination-btn pagination-btn-nav">
                                    <svg class="pagination-icon"
                                         xmlns="http://www.w3.org/2000/svg"
                                         viewBox="0 0 20 20"
                                         fill="currentColor">
                                        <path fill-rule="evenodd"
                                              d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                                              clip-rule="evenodd" />
                                    </svg>
                                </button>
                                <!-- Last page button -->
                                <button @onclick="GoToLastPage"
                                        disabled="@(_currentPage == _totalPages)"
                                        class="pagination-btn pagination-btn-last pagination-btn-nav">
                                    <svg class="pagination-icon"
                                         xmlns="http://www.w3.org/2000/svg"
                                         viewBox="0 0 20 20"
                                         fill="currentColor">
                                        <path fill-rule="evenodd"
                                              d="M10.293 15.707a1 1 0 010-1.414L13.586 11H3a1 1 0 110-2h10.586l-3.293-3.293a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z"
                                              clip-rule="evenodd" />
                                    </svg>
                                </button>
                            </nav>

                            <!-- Pagination info -->
                            <div class="pagination-info">
                                <span class="pagination-info-text">
                                    Showing @((_currentPage - 1) * _pageSize + 1) - @((_currentPage - 1) * _pageSize + (assignedForms?.Count ?? 0)) of @(_totalCount) forms
                                </span>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="no-forms">
                        <div class="no-forms-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                <path fill-rule="evenodd"
                                      d="M7.502 6h7.128A3.375 3.375 0 0118 9.375v9.375a3 3 0 003-3V6.108c0-1.505-1.125-2.811-2.664-2.94a48.972 48.972 0 00-.673-.05A3 3 0 0015 1.5h-1.5a3 3 0 00-2.663 1.618c-.225.015-.45.032-.673.05C8.662 3.295 7.554 4.542 7.502 6zM13.5 3A1.5 1.5 0 0012 4.5h4.5A1.5 1.5 0 0015 3h-1.5z"
                                      clip-rule="evenodd" />
                                <path fill-rule="evenodd"
                                      d="M3 9.375C3 8.339 3.84 7.5 4.875 7.5h9.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-9.75A1.875 1.875 0 013 20.625V9.375zM6 12a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H6.75a.75.75 0 01-.75-.75V12zm2.25 0a.75.75 0 01.75-.75h3.75a.75.75 0 010 1.5H9a.75.75 0 01-.75-.75zm0 2.25a.75.75 0 01.75-.75h3.75a.75.75 0 010 1.5H9a.75.75 0 01-.75-.75z"
                                      clip-rule="evenodd" />
                            </svg>
                        </div>
                        <h4>@(string.IsNullOrEmpty(searchTerm) ? "No forms assigned" : "No matching forms")</h4>
                        <p>@(string.IsNullOrEmpty(searchTerm) ? "You don't have any forms assigned for review at the moment." : $"No forms found matching \"{searchTerm}\". Try a different search term.")</p>
                        @if (!string.IsNullOrEmpty(searchTerm))
                        {
                            <button @onclick="ClearSearch" class="clear-search-btn-alt">Clear search</button>
                        }
                    </div>
                }
            </div>
        }

        @if (_activeTab == "HISTORY")
        {
            <div class="assigned-content">
                <!-- Header -->
                <div class="assigned-header">
                    <h3>Review History</h3>
                    <div class="header-actions">
                        <button class="action-btn refresh-btn" @onclick="RefreshReviewHistory">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                <path fill-rule="evenodd" d="M4.755 10.059a7.5 7.5 0 0112.548-3.364l1.903 1.903h-3.183a.75.75 0 100 1.5h4.992a.75.75 0 00.75-.75V4.356a.75.75 0 00-1.5 0v3.18l-1.9-1.9A9 9 0 003.306 9.67a.75.75 0 101.45.388zm15.408 3.352a.75.75 0 00-.919.53 7.5 7.5 0 01-12.548 3.364l-1.902-1.903h3.183a.75.75 0 000-1.5H2.984a.75.75 0 00-.75.75v4.992a.75.75 0 001.5 0v-3.18l1.9 1.9a9 9 0 0015.059-4.035.75.75 0 00-.53-.918z" clip-rule="evenodd" />
                            </svg>
                            Refresh
                        </button>
                    </div>
                </div>

                <!-- Search and Filter Bar -->
                <div class="user-forms-search-container">
                    <!-- Action Filter Buttons (like BasicUser status filters) -->
                    <div class="status-filter-container">
                        <div class="status-filter-header">
                            <span class="filter-label">Filter by action:</span>
                        </div>
                        <div class="status-filter-buttons">
                            <button class="status-filter-btn all @(AreAllHistoryActionsSelected() ? "active" : "")"
                                    @onclick="ShowAllHistoryActions">
                                <div class="status-indicator all"></div>
                                <span>All</span>
                            </button>

                            <button class="status-filter-btn approved @(IsOnlyHistoryActionSelected("Approved") ? "active" : "")"
                                    @onclick="@(() => FilterHistoryByAction("Approved"))">
                                <div class="status-indicator approved"></div>
                                <span>Approved</span>
                            </button>

                            <button class="status-filter-btn rejected @(IsOnlyHistoryActionSelected("Rejected") ? "active" : "")"
                                    @onclick="@(() => FilterHistoryByAction("Rejected"))">
                                <div class="status-indicator rejected"></div>
                                <span>Rejected</span>
                            </button>
                        </div>
                    </div>

                    <div class="search-input-wrapper">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="search-icon">
                            <path fill-rule="evenodd" d="M10.5 3.75a6.75 6.75 0 100 13.5 6.75 6.75 0 000-13.5zM2.25 10.5a8.25 8.25 0 1114.59 5.28l4.69 4.69a.75.75 0 11-1.06 1.06l-4.69-4.69A8.25 8.25 0 012.25 10.5z" clip-rule="evenodd" />
                        </svg>
                        <input type="text"
                               class="search-input"
                               placeholder="Search by form name, user, or step..."
                               value="@historySearchTerm"
                               @oninput="OnHistorySearchInput" />
                        @if (!string.IsNullOrEmpty(historySearchTerm))
                        {
                            <button class="clear-search-btn" @onclick="ClearHistorySearch">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                    <path fill-rule="evenodd" d="M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z" clip-rule="evenodd" />
                                </svg>
                            </button>
                        }
                    </div>
                </div>

                <!-- Content -->
                @if (isLoadingHistory && _historyCurrentPage == 1)
                {
                    <div class="loading-container">
                        <div class="spinner"></div>
                        <p>Loading review history...</p>
                    </div>
                }
                else if (reviewHistory?.Any() == true)
                {
                    <div class="forms-grid">
                        @foreach (var review in reviewHistory.OrderByDescending(r => r.ReviewedAt))
                        {
                            <div class="form-card history-card @(review.Action.ToLower())"
                                 @onclick="() => ViewFormResponseFromReview(review)">
                                <div class="form-card-header">
                                    <div class="form-icon @(review.Action.ToLower() == "approved" ? "approved" : "rejected")">
                                        @if (review.Action.ToLower() == "approved")
                                        {
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                                <path fill-rule="evenodd" d="M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-6-6a.75.75 0 011.06-1.06l5.353 5.353 8.493-12.739a.75.75 0 011.04-.208z" clip-rule="evenodd" />
                                            </svg>
                                        }
                                        else
                                        {
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                                <path fill-rule="evenodd" d="M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z" clip-rule="evenodd" />
                                            </svg>
                                        }
                                    </div>
                                    <div class="form-info">
                                        <h4>@(review.FormTemplateName ?? "Unknown Form")</h4>
                                        <p class="form-meta">@review.Action on @review.ReviewedAt.ToString("dd/MM/yyyy HH:mm")</p>
                                    </div>
                                </div>

                                <div class="form-card-body">
                                    <div class="form-details">
                                        <div class="detail-item">
                                            <span class="detail-label">User:</span>
                                            <span class="detail-value">@(review.UserName ?? "Unknown")</span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label">Step:</span>
                                            <span class="detail-value">@(review.StepName ?? "Unknown")</span>
                                        </div>
                                        <div class="detail-item">
                                            <span class="detail-label">Reviewed by:</span>
                                            <span class="detail-value">
                                                @if (review.IsImpersonatedAction)
                                                {
                                                    @(review.ImpersonatedByUserName ?? "Admin")
                                                }
                                                else
                                                {
                                                    @(review.ReviewerName ?? "Moderator")
                                                }
                                            </span>
                                        </div>
                                        @if (!string.IsNullOrEmpty(review.RejectReason))
                                        {
                                            <div class="detail-item reject-reason">
                                                <span class="detail-label">Reason:</span>
                                                <span class="detail-value">@review.RejectReason</span>
                                            </div>
                                        }
                                    </div>
                                </div>

                                <div class="form-card-footer">
                                    <div class="view-indicator">
                                        <span class="status-badge @(review.Action.ToLower())">
                                            @review.Action
                                        </span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- PAGINATION (same style as BasicUser) -->
                    @if (_historyTotalPages > 1)
                    {
                        <div class="pagination-container">
                            <nav>
                                <!-- First page btn-->
                                <button @onclick="GoToHistoryFirstPage"
                                        disabled="@(_historyCurrentPage == 1)"
                                        class="pagination-btn pagination-btn-first pagination-btn-nav">
                                    <svg class="pagination-icon"
                                         xmlns="http://www.w3.org/2000/svg"
                                         viewBox="0 0 20 20"
                                         fill="currentColor">
                                        <path fill-rule="evenodd"
                                              d="M15.707 15.707a1 1 0 01-1.414 0L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 011.414-1.414L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 010 1.414z"
                                              clip-rule="evenodd" />
                                    </svg>
                                </button>
                                <!-- Previous page btn -->
                                <button @onclick="GoToHistoryPreviousPage"
                                        disabled="@(_historyCurrentPage == 1)"
                                        class="pagination-btn pagination-btn-nav">
                                    <svg class="pagination-icon"
                                         xmlns="http://www.w3.org/2000/svg"
                                         viewBox="0 0 20 20"
                                         fill="currentColor">
                                        <path fill-rule="evenodd"
                                              d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                                              clip-rule="evenodd" />
                                    </svg>
                                </button>
                                <!-- Paged Numbers - go to page x -->
                                @foreach (int pageNumber in GetHistoryPageNumbers())
                                {
                                    <button @onclick="() => GoToHistoryPage(pageNumber)"
                                            class="pagination-btn pagination-btn-page @(pageNumber == _historyCurrentPage ? "pagination-btn-active" : "")">
                                        @pageNumber
                                    </button>
                                }
                                <!-- Ellipsis if are more pages available -->
                                @if (_historyTotalPages > _historyMaxVisiblePages && _historyCurrentPage < _historyTotalPages - 2)
                                {
                                    <span class="pagination-ellipsis">
                                        ...
                                    </span>
                                }
                                <!-- Next page button -->
                                <button @onclick="GoToHistoryNextPage"
                                        disabled="@(_historyCurrentPage == _historyTotalPages)"
                                        class="pagination-btn pagination-btn-nav">
                                    <svg class="pagination-icon"
                                         xmlns="http://www.w3.org/2000/svg"
                                         viewBox="0 0 20 20"
                                         fill="currentColor">
                                        <path fill-rule="evenodd"
                                              d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                                              clip-rule="evenodd" />
                                    </svg>
                                </button>
                                <!-- Last page button -->
                                <button @onclick="GoToHistoryLastPage"
                                        disabled="@(_historyCurrentPage == _historyTotalPages)"
                                        class="pagination-btn pagination-btn-last pagination-btn-nav">
                                    <svg class="pagination-icon"
                                         xmlns="http://www.w3.org/2000/svg"
                                         viewBox="0 0 20 20"
                                         fill="currentColor">
                                        <path fill-rule="evenodd"
                                              d="M10.293 15.707a1 1 0 010-1.414L13.586 11H3a1 1 0 110-2h10.586l-3.293-3.293a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z"
                                              clip-rule="evenodd" />
                                    </svg>
                                </button>
                            </nav>

                            <!-- Pagination info -->
                            <div class="pagination-info">
                                <span class="pagination-info-text">
                                    Showing @((_historyCurrentPage - 1) * _historyPageSize + 1) - @((_historyCurrentPage - 1) * _historyPageSize + (reviewHistory?.Count ?? 0)) of @(_historyTotalCount) reviews
                                </span>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="no-forms">
                        <div class="no-forms-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zM12.75 6a.75.75 0 00-1.5 0v6c0 .414.336.75.75.75h4.5a.75.75 0 000-1.5h-3.75V6z" clip-rule="evenodd" />
                            </svg>
                        </div>
                        <h4>@(string.IsNullOrEmpty(historySearchTerm) && AreAllHistoryActionsSelected() ? "No review history" : "No matching reviews")</h4>
                        <p>@(string.IsNullOrEmpty(historySearchTerm) && AreAllHistoryActionsSelected() ? "You haven't reviewed any forms yet." : "No reviews found matching your criteria.")</p>
                        @if (!string.IsNullOrEmpty(historySearchTerm) || !AreAllHistoryActionsSelected())
                        {
                            <button class="clear-search-btn-alt" @onclick="ClearHistorySearch">
                                Clear Filters
                            </button>
                        }
                    </div>
                }
            </div>
        }
    </main>
</div>

<!-- Review Form Modal -->
@if (showViewFormModal && selectedFormResponse != null)
{
    <div class="modal-overlay" @onclick="CloseViewFormModal">
        <div class="view-form-modal-content" @onclick:stopPropagation="true">
            <div class="modal-header">
                <div class="modal-title-section">
                    <h3>@(selectedFormTemplate?.Name ?? "Form Response")</h3>
                    <div class="form-metadata">
                        <span class="metadata-item">
                            <strong>User:</strong> @selectedFormResponse.UserName (@selectedFormResponse.UserEmail)
                        </span>
                        <span class="metadata-item">
                            <strong>Step:</strong> @selectedFormResponse.StepName
                        </span>
                        <span class="metadata-item">
                            <strong>Submitted:</strong> @selectedFormResponse.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                        </span>
                        @if (selectedFormResponse.UpdatedAt.HasValue)
                        {
                            <span class="metadata-item">
                                <strong>Updated:</strong> @selectedFormResponse.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")
                            </span>
                        }
                    </div>
                </div>
                <button class="close-btn" @onclick="CloseViewFormModal">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                        <path fill-rule="evenodd" d="M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z" clip-rule="evenodd" />
                    </svg>
                </button>
            </div>

            <div class="modal-body">
                @if (!string.IsNullOrEmpty(selectedFormResponse.RejectReason))
                {
                    <div class="reject-reason-banner">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                            <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z" clip-rule="evenodd" />
                        </svg>
                        <div>
                            <strong>Previously Rejected</strong>
                            <p>@selectedFormResponse.RejectReason</p>
                        </div>
                    </div>
                }

                @if (isLoadingFormDetails)
                {
                    <div class="loading-container">
                        <div class="spinner"></div>
                        <p>Loading form details...</p>
                    </div>
                }
                else if (formElements?.Any() == true)
                {
                    <!-- Form Canvas View - exact ca la BasicUser -->
                    <div class="form-canvas-container">
                        <div class="form-canvas-header">
                            <h4>Form Preview</h4>
                            <span class="readonly-indicator">Read Only</span>
                        </div>

                        <div class="form-canvas-readonly">
                            @if (!formElements.Any())
                            {
                                <div class="empty-form">
                                    <p>No form elements to display.</p>
                                </div>
                            }
                            else
                            {
                                <!-- Render all form elements positioned exactly as they were created -->
                                @foreach (var element in formElements.OrderBy(e => e.ZIndex))
                                {
                                    <div class="form-element-readonly" style="position: absolute; left: @(element.X)px; top: @(element.Y)px; z-index: @element.ZIndex;">
                                        @if (element.IsTextElement)
                                        {
                                            <!-- Static text elements -->
                                            <div class="static-text-readonly">
                                                @element.TextContent
                                            </div>
                                        }
                                        else if (element.ComponentId.HasValue)
                                        {
                                            <!-- Form components with values -->
                                            var component = formComponents?.FirstOrDefault(c => c.Id == element.ComponentId);
                                            if (component != null)
                                            {
                                                var fieldValue = GetFieldValue(component.Id);

                                                <div class="form-field-readonly">
                                                    <label class="field-label-readonly">
                                                        @component.Label
                                                        @if (component.Required == true)
                                                        {
                                                            <span class="required-mark">*</span>
                                                        }
                                                    </label>

                                                    @switch (component.Type?.ToLower())
                                                    {
                                                        case "textinput":
                                                        case "text":
                                                            <div class="field-value-readonly text-input-readonly">
                                                                @(fieldValue?.ToString() ?? "No response")
                                                            </div>
                                                            break;

                                                        case "textarea":
                                                            <div class="field-value-readonly textarea-readonly">
                                                                @(fieldValue?.ToString() ?? "No response")
                                                            </div>
                                                            break;

                                                        case "number":
                                                            <div class="field-value-readonly number-input-readonly">
                                                                @(fieldValue?.ToString() ?? "No response")
                                                            </div>
                                                            break;

                                                        case "email":
                                                            <div class="field-value-readonly email-input-readonly">
                                                                @(fieldValue?.ToString() ?? "No response")
                                                            </div>
                                                            break;

                                                        case "datetime":
                                                        case "date":
                                                            <div class="field-value-readonly datetime-input-readonly">
                                                                @(DateTime.TryParse(fieldValue?.ToString(), out var date) ? date.ToString("dd/MM/yyyy HH:mm") : "No response")
                                                            </div>
                                                            break;

                                                        case "checkbox":
                                                            <div class="checkbox-field-readonly">
                                                                <div class="checkbox-display @(fieldValue?.ToString() == "True" ? "checked" : "unchecked")">
                                                                    @if (fieldValue?.ToString() == "True")
                                                                    {
                                                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                                                            <path fill-rule="evenodd" d="M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-6-6a.75.75 0 011.06-1.06l5.353 5.353 8.493-12.739a.75.75 0 011.04-.208z" clip-rule="evenodd" />
                                                                        </svg>
                                                                    }
                                                                </div>
                                                                <span class="checkbox-label-readonly">@component.Label</span>
                                                            </div>
                                                            break;

                                                        case "radiobutton":
                                                        case "radio":
                                                            var selectedValue = fieldValue?.ToString() ?? "No selection";
                                                            var radioOptions = GetRadioOptions(component);
                                                            
                                                            if (radioOptions.Any() && selectedValue != "No selection")
                                                            {
                                                                <div class="radio-options-display">
                                                                    @foreach (var option in radioOptions)
                                                                    {
                                                                        <div class="radio-option-display @(option == selectedValue ? "selected" : "")">
                                                                            <div class="radio-indicator @(option == selectedValue ? "selected" : "")">
                                                                                @if (option == selectedValue)
                                                                                {
                                                                                    <div class="radio-dot"></div>
                                                                                }
                                                                            </div>
                                                                            <span class="radio-option-text">@option</span>
                                                                        </div>
                                                                    }
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="field-value-readonly radio-input-readonly">
                                                                    @selectedValue
                                                                </div>
                                                            }
                                                            break;

                                                        case "select":
                                                        case "dropdown":
                                                            <div class="field-value-readonly select-input-readonly">
                                                                @(fieldValue?.ToString() ?? "No selection")
                                                            </div>
                                                            break;

                                                        default:
                                                            <div class="field-value-readonly default-input-readonly">
                                                                @(fieldValue?.ToString() ?? "No response")
                                                            </div>
                                                            break;
                                                    }
                                                </div>
                                            }
                                        }
                                    </div>
                                }
                            }
                        </div>
                    </div>
                }
                else
                {
                    <div class="no-form-data">
                        <p>Unable to load form structure.</p>
                    </div>
                }
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer">
                <!-- Status Display -->
                <div class="form-status">
                    <span class="status-label">Status:</span>
                    <span class="status-value" style="background: @GetStatusColor(GetFormStatus(selectedFormResponse)); color: white; padding: 0.25rem 0.75rem; border-radius: 12px; font-size: 12px; font-weight: 600; border: none;">
                        @GetFormStatus(selectedFormResponse)
                    </span>
                </div>

                <!-- Review Actions - doar pentru formulare cu status Pending -->
                @if (ShouldShowReviewButtons(selectedFormResponse))
                {
                    <div class="review-actions">
                        @if (isSubmittingReview)
                        {
                            <div class="submitting-indicator">
                                <div class="spinner-small"></div>
                                <span>Processing...</span>
                            </div>
                        }
                        else
                        {
                            <button class="review-btn reject-btn" @onclick="ShowRejectModal" disabled="@isSubmittingReview">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                    <path fill-rule="evenodd" d="M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z" clip-rule="evenodd" />
                                </svg>
                                Reject
                            </button>

                            <button class="review-btn approve-btn" @onclick="ApproveForm" disabled="@isSubmittingReview">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                    <path fill-rule="evenodd" d="M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-6-6a.75.75 0 011.06-1.06l5.353 5.353 8.493-12.739a.75.75 0 011.04-.208z" clip-rule="evenodd" />
                                </svg>
                                @(nextStepInfo?.HasNextStep == true ? $"Approve & Send to {nextStepInfo.NextStepName}" : "Final Approval")
                            </button>
                        }
                    </div>
                }
                else
                {
                    <!-- Mesaj informativ pentru formulare finalizate -->
                    <div class="review-status-info">
                        @{
                            var status = GetFormStatus(selectedFormResponse);
                        }
                        @if (status == "Rejected")
                        {
                            <div class="status-info-message rejected">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                    <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12 6.615 2.25 12 2.25zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z" clip-rule="evenodd" />
                                </svg>
                                <span>This form has been rejected and cannot be reviewed again.</span>
                            </div>
                        }
                        else if (status == "Approved")
                        {
                            <div class="status-info-message approved">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                    <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zM12 13.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm-2.53-1.72a.75.75 0 00-1.06-1.06l-1.72 1.72a.75.75 0 001.06 1.06l1.72-1.72zm6.78-1.72a.75.75 0 00-1.06 1.06l1.72 1.72a.75.75 0 001.06-1.06l-1.72-1.72z" clip-rule="evenodd" />
                                </svg>
                                <span>This form has been approved and the review process is complete.</span>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
}

<!-- Reject Modal -->
@if (showRejectModal && selectedFormResponse != null)
{
    <div class="modal-overlay" @onclick="CloseRejectModal" style="z-index: 1100;">
        <div class="reject-modal-content" @onclick:stopPropagation="true">
            <div class="reject-modal-header">
                <h4>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                        <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12 6.615 2.25 12 2.25zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z" clip-rule="evenodd" />
                    </svg>
                    Reject Form
                </h4>
                <button class="close-btn" @onclick="CloseRejectModal">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                        <path fill-rule="evenodd" d="M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z" clip-rule="evenodd" />
                    </svg>
                </button>
            </div>

            <div class="reject-modal-body">
                <div class="reject-instructions">
                    Please provide a clear reason for rejecting this form submission. This will help the user understand what needs to be corrected.
                </div>

                <label class="reject-reason-label">Rejection Reason *</label>
                <textarea class="reject-reason-textarea"
                          placeholder="Enter the reason for rejection..."
                          @bind="rejectReason"
                          @oninput="OnRejectReasonInput"
                          maxlength="500"></textarea>

                <div class="character-count @(rejectReason?.Length >= 450 ? "near-limit" : "") @(rejectReason?.Length >= 500 ? "at-limit" : "")">
                    @(rejectReason?.Length ?? 0)/500
                    @if ((rejectReason?.Length ?? 0) >= 450)
                    {
                        <span style="margin-left: 0.5rem;">
                            @if ((rejectReason?.Length ?? 0) >= 500)
                            {
                                <span style="color: #dc2626;">Character limit reached</span>
                            }
                            else
                            {
                                <span style="color: #f59e0b;">@(500 - (rejectReason?.Length ?? 0)) characters remaining</span>
                            }
                        </span>
                    }
                </div>
            </div>

            <div class="modal-footer">
                <button class="cancel-btn" @onclick="CloseRejectModal" disabled="@isSubmittingReview">
                    Cancel
                </button>
                <button class="confirm-reject-btn"
                        @onclick="ConfirmReject"
                        disabled="@(string.IsNullOrWhiteSpace(rejectReason) || isSubmittingReview)"
                        title="@(string.IsNullOrWhiteSpace(rejectReason) ? "Please enter a rejection reason" : "Click to confirm rejection")">
                    @if (isSubmittingReview)
                    {
                        <div class="spinner-small"></div>
                        <span>Rejecting...</span>
                    }
                    else
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                            <path fill-rule="evenodd" d="M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z" clip-rule="evenodd" />
                        </svg>
                        <span>Confirm Reject</span>
                    }
                </button>
            </div>
        </div>
    </div>
}